{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMNkzU7Hh4LWA6vq+5HcU+f",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Nadezda-Sut/statistics_in_science/blob/main/Exploratory%20factor%20analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "tdFbj5d25com"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pyYPADm441iT",
        "outputId": "59c6baa3-a81d-4fd5-e95e-ac1aa128860e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n"
          ]
        }
      ],
      "source": [
        "#link google colab and google drive\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# path to file in google drive\n",
        "\n",
        "file_path = \"/content/gdrive/My Drive/Colab Notebooks/MiklyaeveAV.csv\"\n",
        "data = pd.read_csv(file_path)\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "sOPJ9e7b5MN1",
        "outputId": "074e72df-f07d-49d2-e8f7-b96d534dfbb5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       №  Студенты (1)школьники(0)  \\\n",
              "0      1                         1   \n",
              "1      2                         1   \n",
              "2      3                         1   \n",
              "3      4                         1   \n",
              "4      5                         1   \n",
              "..   ...                       ...   \n",
              "564  565                         0   \n",
              "565  566                         0   \n",
              "566  567                         0   \n",
              "567  568                         0   \n",
              "568  569                         0   \n",
              "\n",
              "     Использую для учебных и образовательных целей  \\\n",
              "0                                                3   \n",
              "1                                                0   \n",
              "2                                                0   \n",
              "3                                                0   \n",
              "4                                                0   \n",
              "..                                             ...   \n",
              "564                                             10   \n",
              "565                                              0   \n",
              "566                                              2   \n",
              "567                                              1   \n",
              "568                                              0   \n",
              "\n",
              "     Использую в целях, не связанных с обучением или образованием  \\\n",
              "0                                                    2              \n",
              "1                                                    4              \n",
              "2                                                    3              \n",
              "3                                                    3              \n",
              "4                                                    2              \n",
              "..                                                 ...              \n",
              "564                                                  0              \n",
              "565                                                  1              \n",
              "566                                                  1              \n",
              "567                                                  0              \n",
              "568                                                  2              \n",
              "\n",
              "     Использую и для учебных, и для не учебных целей  Не использую  \\\n",
              "0                                                  5             0   \n",
              "1                                                  5             1   \n",
              "2                                                  4             3   \n",
              "3                                                  7             0   \n",
              "4                                                  8             0   \n",
              "..                                               ...           ...   \n",
              "564                                                0             0   \n",
              "565                                                8             1   \n",
              "566                                                2             3   \n",
              "567                                                9             0   \n",
              "568                                                6             2   \n",
              "\n",
              "     Компонент знаний  Умею  Не умею  \\\n",
              "0                 100     7        4   \n",
              "1                  90     4        7   \n",
              "2                  70     6        5   \n",
              "3                 100    10        1   \n",
              "4                 100     9        2   \n",
              "..                ...   ...      ...   \n",
              "564               100    11        0   \n",
              "565                90     9        2   \n",
              "566                50     6        5   \n",
              "567               100    10        1   \n",
              "568                80     8        3   \n",
              "\n",
              "     Компонент ответственности (обеспечения безопасности)   ...  \\\n",
              "0                                                63.64      ...   \n",
              "1                                                36.36      ...   \n",
              "2                                                54.55      ...   \n",
              "3                                                90.91      ...   \n",
              "4                                                81.82      ...   \n",
              "..                                                 ...      ...   \n",
              "564                                             100.00      ...   \n",
              "565                                              81.82      ...   \n",
              "566                                              54.55      ...   \n",
              "567                                              90.91      ...   \n",
              "568                                              72.73      ...   \n",
              "\n",
              "     6. Тесты и тренажеры для самопроверки, подготовки к экзаменам и контрольным работам  \\\n",
              "0                                                    2                                     \n",
              "1                                                    0                                     \n",
              "2                                                    0                                     \n",
              "3                                                    2                                     \n",
              "4                                                    1                                     \n",
              "..                                                 ...                                     \n",
              "564                                                  0                                     \n",
              "565                                                  2                                     \n",
              "566                                                  3                                     \n",
              "567                                                  3                                     \n",
              "568                                                  4                                     \n",
              "\n",
              "     7. Моделирование экспериментов в виртуальной среде  \\\n",
              "0                                                    0    \n",
              "1                                                    0    \n",
              "2                                                    0    \n",
              "3                                                    1    \n",
              "4                                                    2    \n",
              "..                                                 ...    \n",
              "564                                                  0    \n",
              "565                                                  2    \n",
              "566                                                  4    \n",
              "567                                                  0    \n",
              "568                                                  4    \n",
              "\n",
              "     8. Дополнительные занятия (например, по скайпу)  \\\n",
              "0                                                  0   \n",
              "1                                                  1   \n",
              "2                                                  0   \n",
              "3                                                  2   \n",
              "4                                                  0   \n",
              "..                                               ...   \n",
              "564                                                0   \n",
              "565                                                2   \n",
              "566                                                2   \n",
              "567                                                2   \n",
              "568                                                4   \n",
              "\n",
              "     9. Участие в онлайн-олимпиадах и конкурсах  \\\n",
              "0                                             1   \n",
              "1                                             0   \n",
              "2                                             0   \n",
              "3                                             3   \n",
              "4                                             2   \n",
              "..                                          ...   \n",
              "564                                           0   \n",
              "565                                           2   \n",
              "566                                           4   \n",
              "567                                           0   \n",
              "568                                           4   \n",
              "\n",
              "     10. Обмен информацией, связанной с учебой, с одногруппниками (в мессенджерах, социальных сетях)  \\\n",
              "0                                                    3                                                 \n",
              "1                                                    3                                                 \n",
              "2                                                    3                                                 \n",
              "3                                                    3                                                 \n",
              "4                                                    4                                                 \n",
              "..                                                 ...                                                 \n",
              "564                                                  0                                                 \n",
              "565                                                  2                                                 \n",
              "566                                                  4                                                 \n",
              "567                                                  2                                                 \n",
              "568                                                  4                                                 \n",
              "\n",
              "     11. Обмен информацией, связанной с учебой, с преподавателями (в мессенджерах, социальных сетях)  \\\n",
              "0                                                    3                                                 \n",
              "1                                                    2                                                 \n",
              "2                                                    3                                                 \n",
              "3                                                    0                                                 \n",
              "4                                                    2                                                 \n",
              "..                                                 ...                                                 \n",
              "564                                                  0                                                 \n",
              "565                                                  2                                                 \n",
              "566                                                  1                                                 \n",
              "567                                                  4                                                 \n",
              "568                                                  4                                                 \n",
              "\n",
              "     Ваш пол:  Ваш возраст:  Как Вы учитесь в этом году?  \\\n",
              "0           0            19                            4   \n",
              "1           0            22                            5   \n",
              "2           0            18                            5   \n",
              "3           0            24                            5   \n",
              "4           0            22                            4   \n",
              "..        ...           ...                          ...   \n",
              "564         1            18                            4   \n",
              "565         0            15                            2   \n",
              "566         0            14                            3   \n",
              "567         0            16                            3   \n",
              "568         0            14                            4   \n",
              "\n",
              "     Какое техническое устройство Вы предпочитаете использовать для того, чтобы искать в интернете информацию, необходимую для выполнения учебных заданий? Выберите один вариант, который для Вас наиболее предпочтителен:1 смартфон,2 комп/ноут,3 планшет  \n",
              "0                                                    1                                                                                                                                                                                                      \n",
              "1                                                    1                                                                                                                                                                                                      \n",
              "2                                                    1                                                                                                                                                                                                      \n",
              "3                                                    2                                                                                                                                                                                                      \n",
              "4                                                    2                                                                                                                                                                                                      \n",
              "..                                                 ...                                                                                                                                                                                                      \n",
              "564                                                  1                                                                                                                                                                                                      \n",
              "565                                                  1                                                                                                                                                                                                      \n",
              "566                                                  1                                                                                                                                                                                                      \n",
              "567                                                  1                                                                                                                                                                                                      \n",
              "568                                                  1                                                                                                                                                                                                      \n",
              "\n",
              "[569 rows x 39 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8a71ed92-bb3f-4ba0-b1de-21960f4b7059\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>№</th>\n",
              "      <th>Студенты (1)школьники(0)</th>\n",
              "      <th>Использую для учебных и образовательных целей</th>\n",
              "      <th>Использую в целях, не связанных с обучением или образованием</th>\n",
              "      <th>Использую и для учебных, и для не учебных целей</th>\n",
              "      <th>Не использую</th>\n",
              "      <th>Компонент знаний</th>\n",
              "      <th>Умею</th>\n",
              "      <th>Не умею</th>\n",
              "      <th>Компонент ответственности (обеспечения безопасности)</th>\n",
              "      <th>...</th>\n",
              "      <th>6. Тесты и тренажеры для самопроверки, подготовки к экзаменам и контрольным работам</th>\n",
              "      <th>7. Моделирование экспериментов в виртуальной среде</th>\n",
              "      <th>8. Дополнительные занятия (например, по скайпу)</th>\n",
              "      <th>9. Участие в онлайн-олимпиадах и конкурсах</th>\n",
              "      <th>10. Обмен информацией, связанной с учебой, с одногруппниками (в мессенджерах, социальных сетях)</th>\n",
              "      <th>11. Обмен информацией, связанной с учебой, с преподавателями (в мессенджерах, социальных сетях)</th>\n",
              "      <th>Ваш пол:</th>\n",
              "      <th>Ваш возраст:</th>\n",
              "      <th>Как Вы учитесь в этом году?</th>\n",
              "      <th>Какое техническое устройство Вы предпочитаете использовать для того, чтобы искать в интернете информацию, необходимую для выполнения учебных заданий? Выберите один вариант, который для Вас наиболее предпочтителен:1 смартфон,2 комп/ноут,3 планшет</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>100</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>63.64</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>4</td>\n",
              "      <td>7</td>\n",
              "      <td>36.36</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>70</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>54.55</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>18</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>100</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>90.91</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>100</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>81.82</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>22</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>564</th>\n",
              "      <td>565</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>100</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>100.00</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>18</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>565</th>\n",
              "      <td>566</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>90</td>\n",
              "      <td>9</td>\n",
              "      <td>2</td>\n",
              "      <td>81.82</td>\n",
              "      <td>...</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>566</th>\n",
              "      <td>567</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>50</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>54.55</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>567</th>\n",
              "      <td>568</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>100</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>90.91</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>568</th>\n",
              "      <td>569</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>80</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>72.73</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>569 rows × 39 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a71ed92-bb3f-4ba0-b1de-21960f4b7059')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8a71ed92-bb3f-4ba0-b1de-21960f4b7059 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8a71ed92-bb3f-4ba0-b1de-21960f4b7059');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5864af9e-a028-4125-a45e-e10aa79ae7d5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5864af9e-a028-4125-a45e-e10aa79ae7d5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5864af9e-a028-4125-a45e-e10aa79ae7d5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "! pip install factor-analyzer\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ggo6W0h8-yTG",
        "outputId": "ffd78162-38af-4849-fb7a-cf911fad5186"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting factor-analyzer\n",
            "  Downloading factor_analyzer-0.5.0.tar.gz (42 kB)\n",
            "\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/42.5 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m42.5/42.5 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from factor-analyzer) (1.5.3)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from factor-analyzer) (1.10.1)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from factor-analyzer) (1.23.5)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from factor-analyzer) (1.2.2)\n",
            "Collecting pre-commit (from factor-analyzer)\n",
            "  Downloading pre_commit-3.3.3-py2.py3-none-any.whl (202 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m202.8/202.8 kB\u001b[0m \u001b[31m11.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->factor-analyzer) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->factor-analyzer) (2023.3)\n",
            "Collecting cfgv>=2.0.0 (from pre-commit->factor-analyzer)\n",
            "  Downloading cfgv-3.4.0-py2.py3-none-any.whl (7.2 kB)\n",
            "Collecting identify>=1.0.0 (from pre-commit->factor-analyzer)\n",
            "  Downloading identify-2.5.27-py2.py3-none-any.whl (98 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.8/98.8 kB\u001b[0m \u001b[31m10.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting nodeenv>=0.11.1 (from pre-commit->factor-analyzer)\n",
            "  Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from pre-commit->factor-analyzer) (6.0.1)\n",
            "Collecting virtualenv>=20.10.0 (from pre-commit->factor-analyzer)\n",
            "  Downloading virtualenv-20.24.4-py3-none-any.whl (3.7 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.7/3.7 MB\u001b[0m \u001b[31m65.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->factor-analyzer) (1.3.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->factor-analyzer) (3.2.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from nodeenv>=0.11.1->pre-commit->factor-analyzer) (67.7.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->factor-analyzer) (1.16.0)\n",
            "Collecting distlib<1,>=0.3.7 (from virtualenv>=20.10.0->pre-commit->factor-analyzer)\n",
            "  Downloading distlib-0.3.7-py2.py3-none-any.whl (468 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m468.9/468.9 kB\u001b[0m \u001b[31m35.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: filelock<4,>=3.12.2 in /usr/local/lib/python3.10/dist-packages (from virtualenv>=20.10.0->pre-commit->factor-analyzer) (3.12.2)\n",
            "Requirement already satisfied: platformdirs<4,>=3.9.1 in /usr/local/lib/python3.10/dist-packages (from virtualenv>=20.10.0->pre-commit->factor-analyzer) (3.10.0)\n",
            "Building wheels for collected packages: factor-analyzer\n",
            "  Building wheel for factor-analyzer (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for factor-analyzer: filename=factor_analyzer-0.5.0-py2.py3-none-any.whl size=42487 sha256=73362472e0caa2f16f40a7d7473a8efafcea49f8cb0bc37ef61b1cf2b3d7108e\n",
            "  Stored in directory: /root/.cache/pip/wheels/74/a2/6c/26fb1addf1ce6c60a8cef8397f2999f0a1e6e2fcddc8abf33e\n",
            "Successfully built factor-analyzer\n",
            "Installing collected packages: distlib, virtualenv, nodeenv, identify, cfgv, pre-commit, factor-analyzer\n",
            "Successfully installed cfgv-3.4.0 distlib-0.3.7 factor-analyzer-0.5.0 identify-2.5.27 nodeenv-1.8.0 pre-commit-3.3.3 virtualenv-20.24.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from factor_analyzer import FactorAnalyzer\n",
        "\n",
        "\n",
        "# Specify the number of factors you want to extract\n",
        "num_factors = 3\n",
        "\n",
        "# Initialize the factor analyzer with the desired number of factors\n",
        "factor_analyzer = FactorAnalyzer(n_factors=num_factors, rotation='varimax')\n",
        "\n",
        "# Fit the model to your data\n",
        "factor_analyzer.fit(data)\n",
        "\n",
        "# Get the factor loadings\n",
        "factor_loadings = factor_analyzer.loadings_\n",
        "\n",
        "# Print factor loadings\n",
        "print(\"Factor Loadings:\\n\", factor_loadings)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HAWsiza7-4Wa",
        "outputId": "a45ab870-04f0-41cb-f7cb-300dc538d04b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Factor Loadings:\n",
            " [[ 0.10914124 -0.19486577 -0.70853729]\n",
            " [-0.06961265  0.20775701  0.77445418]\n",
            " [ 0.17049464  0.18415832 -0.43923194]\n",
            " [-0.0777677  -0.17188606 -0.03186138]\n",
            " [ 0.16800033  0.05214157  0.57669569]\n",
            " [-0.49183486 -0.13469475 -0.39029693]\n",
            " [ 0.46983566  0.10961206  0.45969578]\n",
            " [ 0.59062342  0.06911426 -0.10430658]\n",
            " [-0.59062342 -0.06911426  0.10430658]\n",
            " [ 0.59060984  0.06912008 -0.10430246]\n",
            " [ 0.15652283  0.19287278 -0.52746638]\n",
            " [ 0.00414975 -0.12541506 -0.04358051]\n",
            " [ 0.32269531  0.04684209  0.38667253]\n",
            " [-0.95009969 -0.13771576  0.08021768]\n",
            " [ 0.95009969  0.13771576 -0.08021768]\n",
            " [ 0.67388177  0.13080645  0.00976889]\n",
            " [ 0.6597309   0.12895829  0.06216001]\n",
            " [ 0.72949938  0.0633736  -0.29766072]\n",
            " [ 0.70307369  0.15421512  0.01372039]\n",
            " [ 0.00638278  0.26466281  0.01752474]\n",
            " [ 0.06264264  0.35572806  0.11716846]\n",
            " [-0.02007935  0.57275168  0.29616688]\n",
            " [-0.00181456  0.42985591  0.10707853]\n",
            " [ 0.27779096  0.39131838 -0.05059975]\n",
            " [ 0.07214339  0.29515265 -0.15172679]\n",
            " [ 0.06051277  0.5452197   0.20754302]\n",
            " [ 0.01434273  0.58282434  0.2141613 ]\n",
            " [ 0.16037437  0.61802642  0.02921963]\n",
            " [ 0.17554501  0.65103014  0.00936915]\n",
            " [ 0.13376846  0.52698598 -0.24372132]\n",
            " [ 0.24419717  0.43930897 -0.43236103]\n",
            " [ 0.15652778  0.54725401 -0.30280748]\n",
            " [ 0.18959487  0.5199566  -0.40443881]\n",
            " [ 0.01445907  0.56064926  0.32161515]\n",
            " [ 0.1481106   0.59110378  0.02506914]\n",
            " [ 0.08616875 -0.09547734 -0.32430782]\n",
            " [ 0.00292559  0.1737071   0.70636866]\n",
            " [-0.02814697  0.1628241   0.30538308]\n",
            " [-0.00379115  0.01487003  0.18215452]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from factor_analyzer import FactorAnalyzer\n",
        "\n",
        "\n",
        "\n",
        "# Specify the number of factors you want to extract\n",
        "num_factors = 3\n",
        "\n",
        "# Initialize the factor analyzer with the desired number of factors\n",
        "factor_analyzer = FactorAnalyzer(n_factors=num_factors, rotation='varimax')\n",
        "\n",
        "# Fit the model to your data\n",
        "factor_analyzer.fit(data)\n",
        "\n",
        "# Get the factor loadings\n",
        "factor_loadings = factor_analyzer.loadings_\n",
        "\n",
        "# Create a pandas DataFrame from the factor loadings\n",
        "factor_loading_df = pd.DataFrame(factor_loadings, columns=[f'Factor {i+1}' for i in range(num_factors)], index=data.columns)\n",
        "\n",
        "\n",
        "\n",
        "# Print the DataFrame\n",
        "print(\"Factor Loadings Table:\\n\", factor_loading_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Eh4I9XhH-_l9",
        "outputId": "32f3a402-45f0-4a48-aeff-8f0ea37a745f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Factor Loadings Table:\n",
            "                                                     Factor 1  Factor 2  \\\n",
            "№                                                   0.109141 -0.194866   \n",
            "Студенты (1)школьники(0)                           -0.069613  0.207757   \n",
            "Использую для учебных и образовательных целей       0.170495  0.184158   \n",
            "Использую в целях, не связанных с обучением или... -0.077768 -0.171886   \n",
            "Использую и для учебных, и для не учебных целей     0.168000  0.052142   \n",
            "Не использую                                       -0.491835 -0.134695   \n",
            "Компонент знаний                                    0.469836  0.109612   \n",
            "Умею                                                0.590623  0.069114   \n",
            "Не умею                                            -0.590623 -0.069114   \n",
            "Компонент ответственности (обеспечения безопасн...  0.590610  0.069120   \n",
            "Использую для учебных и образовательных целей.1     0.156523  0.192873   \n",
            "Использую в целях, не связанных с обучением или...  0.004150 -0.125415   \n",
            "Использую и для учебных и для неучебных целей       0.322695  0.046842   \n",
            "Не использую.1                                     -0.950100 -0.137716   \n",
            "Компонент умений                                    0.950100  0.137716   \n",
            "Контент 6 (1,2,4,5,8,20)                            0.673882  0.130806   \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.659731  0.128958   \n",
            "Техносфера 6 (9,10,14,15,18,22)                     0.729499  0.063374   \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.703074  0.154215   \n",
            "1. Для развлечения, отдыха                          0.006383  0.264663   \n",
            "2. Для общения                                      0.062643  0.355728   \n",
            "3. Для учебы                                       -0.020079  0.572752   \n",
            "4. Для поиска информации, не связанной с учебой    -0.001815  0.429856   \n",
            "5. Для покупок                                      0.277791  0.391318   \n",
            "1. Поиск готовых решений и ответов, выполненных...  0.072143  0.295153   \n",
            "2. Поиск дополнительной информации, которой нет...  0.060513  0.545220   \n",
            "3. Поиск справочной информации (словари, справо...  0.014343  0.582824   \n",
            "4. Просмотр видеоуроков                             0.160374  0.618026   \n",
            "5. Просмотр научно-популярных и художественных ...  0.175545  0.651030   \n",
            "6. Тесты и тренажеры для самопроверки, подготов...  0.133768  0.526986   \n",
            "7. Моделирование экспериментов в виртуальной среде  0.244197  0.439309   \n",
            "8. Дополнительные занятия (например, по скайпу)     0.156528  0.547254   \n",
            "9. Участие в онлайн-олимпиадах и конкурсах          0.189595  0.519957   \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.014459  0.560649   \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.148111  0.591104   \n",
            "Ваш пол:                                            0.086169 -0.095477   \n",
            "Ваш возраст:                                        0.002926  0.173707   \n",
            "Как Вы учитесь в этом году?                        -0.028147  0.162824   \n",
            "Какое техническое устройство Вы предпочитаете и... -0.003791  0.014870   \n",
            "\n",
            "                                                    Factor 3  \n",
            "№                                                  -0.708537  \n",
            "Студенты (1)школьники(0)                            0.774454  \n",
            "Использую для учебных и образовательных целей      -0.439232  \n",
            "Использую в целях, не связанных с обучением или... -0.031861  \n",
            "Использую и для учебных, и для не учебных целей     0.576696  \n",
            "Не использую                                       -0.390297  \n",
            "Компонент знаний                                    0.459696  \n",
            "Умею                                               -0.104307  \n",
            "Не умею                                             0.104307  \n",
            "Компонент ответственности (обеспечения безопасн... -0.104302  \n",
            "Использую для учебных и образовательных целей.1    -0.527466  \n",
            "Использую в целях, не связанных с обучением или... -0.043581  \n",
            "Использую и для учебных и для неучебных целей       0.386673  \n",
            "Не использую.1                                      0.080218  \n",
            "Компонент умений                                   -0.080218  \n",
            "Контент 6 (1,2,4,5,8,20)                            0.009769  \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.062160  \n",
            "Техносфера 6 (9,10,14,15,18,22)                    -0.297661  \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.013720  \n",
            "1. Для развлечения, отдыха                          0.017525  \n",
            "2. Для общения                                      0.117168  \n",
            "3. Для учебы                                        0.296167  \n",
            "4. Для поиска информации, не связанной с учебой     0.107079  \n",
            "5. Для покупок                                     -0.050600  \n",
            "1. Поиск готовых решений и ответов, выполненных... -0.151727  \n",
            "2. Поиск дополнительной информации, которой нет...  0.207543  \n",
            "3. Поиск справочной информации (словари, справо...  0.214161  \n",
            "4. Просмотр видеоуроков                             0.029220  \n",
            "5. Просмотр научно-популярных и художественных ...  0.009369  \n",
            "6. Тесты и тренажеры для самопроверки, подготов... -0.243721  \n",
            "7. Моделирование экспериментов в виртуальной среде -0.432361  \n",
            "8. Дополнительные занятия (например, по скайпу)    -0.302807  \n",
            "9. Участие в онлайн-олимпиадах и конкурсах         -0.404439  \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.321615  \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.025069  \n",
            "Ваш пол:                                           -0.324308  \n",
            "Ваш возраст:                                        0.706369  \n",
            "Как Вы учитесь в этом году?                         0.305383  \n",
            "Какое техническое устройство Вы предпочитаете и...  0.182155  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from factor_analyzer import FactorAnalyzer\n",
        "from factor_analyzer.factor_analyzer import calculate_bartlett_sphericity, calculate_kmo\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "# Assume you have loaded your data into the 'data' DataFrame\n",
        "\n",
        "# Specify the number of factors you want to extract\n",
        "num_factors = 3\n",
        "\n",
        "# Initialize the factor analyzer with the desired number of factors\n",
        "factor_analyzer = FactorAnalyzer(n_factors=num_factors, rotation='varimax')\n",
        "\n",
        "# Fit the model to your data\n",
        "factor_analyzer.fit(data)\n",
        "\n",
        "# Get the factor loadings\n",
        "factor_loadings = factor_analyzer.loadings_\n",
        "\n",
        "# Create a pandas DataFrame from the factor loadings\n",
        "factor_loading_df = pd.DataFrame(factor_loadings, columns=[f'Factor {i+1}' for i in range(num_factors)], index=data.columns)\n",
        "\n",
        "# Print the factor loadings table with grid lines using HTML\n",
        "print(\"Factor Loadings Table:\")\n",
        "display(HTML(factor_loading_df.to_html()))\n",
        "\n",
        "# Bartlett’s Test\n",
        "chi_square_value, p_value = calculate_bartlett_sphericity(data)\n",
        "print(\"Bartlett’s Test:\")\n",
        "print(\"Chi-Square Value:\", chi_square_value)\n",
        "print(\"P-value:\", p_value)\n",
        "\n",
        "# Kaiser-Meyer-Olkin (KMO) Test\n",
        "kmo_all, kmo_model = calculate_kmo(data)\n",
        "print(\"\\nKaiser-Meyer-Olkin (KMO) Test:\")\n",
        "print(\"KMO Overall:\", kmo_all)\n",
        "print(\"KMO Model:\", kmo_model)\n",
        "\n",
        "# Scree Plot\n",
        "ev, v = factor_analyzer.get_eigenvalues()\n",
        "plt.plot(range(1, len(ev) + 1), ev, marker='o')\n",
        "plt.title('Scree Plot')\n",
        "plt.xlabel('Factor')\n",
        "plt.ylabel('Eigenvalue')\n",
        "plt.show()\n",
        "\n",
        "# Principal Axes Factor analysis\n",
        "factor_analyzer_method = factor_analyzer.transform(data)\n",
        "principal_axes_factor_df = pd.DataFrame(factor_analyzer_method, columns=[f'Factor {i+1}' for i in range(num_factors)])\n",
        "\n",
        "print(\"\\nPrincipal Axes Factor Analysis:\")\n",
        "print(principal_axes_factor_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "MMNeFub1hXNY",
        "outputId": "1119aec7-92ad-4301-b8e1-a41fa2942c19"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Factor Loadings Table:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Factor 1</th>\n",
              "      <th>Factor 2</th>\n",
              "      <th>Factor 3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>№</th>\n",
              "      <td>0.109141</td>\n",
              "      <td>-0.194866</td>\n",
              "      <td>-0.708537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Студенты (1)школьники(0)</th>\n",
              "      <td>-0.069613</td>\n",
              "      <td>0.207757</td>\n",
              "      <td>0.774454</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую для учебных и образовательных целей</th>\n",
              "      <td>0.170495</td>\n",
              "      <td>0.184158</td>\n",
              "      <td>-0.439232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую в целях, не связанных с обучением или образованием</th>\n",
              "      <td>-0.077768</td>\n",
              "      <td>-0.171886</td>\n",
              "      <td>-0.031861</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую и для учебных, и для не учебных целей</th>\n",
              "      <td>0.168000</td>\n",
              "      <td>0.052142</td>\n",
              "      <td>0.576696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Не использую</th>\n",
              "      <td>-0.491835</td>\n",
              "      <td>-0.134695</td>\n",
              "      <td>-0.390297</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Компонент знаний</th>\n",
              "      <td>0.469836</td>\n",
              "      <td>0.109612</td>\n",
              "      <td>0.459696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Умею</th>\n",
              "      <td>0.590623</td>\n",
              "      <td>0.069114</td>\n",
              "      <td>-0.104307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Не умею</th>\n",
              "      <td>-0.590623</td>\n",
              "      <td>-0.069114</td>\n",
              "      <td>0.104307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Компонент ответственности (обеспечения безопасности)</th>\n",
              "      <td>0.590610</td>\n",
              "      <td>0.069120</td>\n",
              "      <td>-0.104302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую для учебных и образовательных целей.1</th>\n",
              "      <td>0.156523</td>\n",
              "      <td>0.192873</td>\n",
              "      <td>-0.527466</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую в целях, не связанных с обучением или образованием.1</th>\n",
              "      <td>0.004150</td>\n",
              "      <td>-0.125415</td>\n",
              "      <td>-0.043581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Использую и для учебных и для неучебных целей</th>\n",
              "      <td>0.322695</td>\n",
              "      <td>0.046842</td>\n",
              "      <td>0.386673</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Не использую.1</th>\n",
              "      <td>-0.950100</td>\n",
              "      <td>-0.137716</td>\n",
              "      <td>0.080218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Компонент умений</th>\n",
              "      <td>0.950100</td>\n",
              "      <td>0.137716</td>\n",
              "      <td>-0.080218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Контент 6 (1,2,4,5,8,20)</th>\n",
              "      <td>0.673882</td>\n",
              "      <td>0.130806</td>\n",
              "      <td>0.009769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Коммуникация 7 (7,11,13, 16,17,19,23)</th>\n",
              "      <td>0.659731</td>\n",
              "      <td>0.128958</td>\n",
              "      <td>0.062160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Техносфера 6 (9,10,14,15,18,22)</th>\n",
              "      <td>0.729499</td>\n",
              "      <td>0.063374</td>\n",
              "      <td>-0.297661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Потребление 6 (3,6,12,21,24,25)</th>\n",
              "      <td>0.703074</td>\n",
              "      <td>0.154215</td>\n",
              "      <td>0.013720</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1. Для развлечения, отдыха</th>\n",
              "      <td>0.006383</td>\n",
              "      <td>0.264663</td>\n",
              "      <td>0.017525</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2. Для общения</th>\n",
              "      <td>0.062643</td>\n",
              "      <td>0.355728</td>\n",
              "      <td>0.117168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3. Для учебы</th>\n",
              "      <td>-0.020079</td>\n",
              "      <td>0.572752</td>\n",
              "      <td>0.296167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4. Для поиска информации, не связанной с учебой</th>\n",
              "      <td>-0.001815</td>\n",
              "      <td>0.429856</td>\n",
              "      <td>0.107079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5. Для покупок</th>\n",
              "      <td>0.277791</td>\n",
              "      <td>0.391318</td>\n",
              "      <td>-0.050600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1. Поиск готовых решений и ответов, выполненных заданий</th>\n",
              "      <td>0.072143</td>\n",
              "      <td>0.295153</td>\n",
              "      <td>-0.151727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2. Поиск дополнительной информации, которой нет в учебниках</th>\n",
              "      <td>0.060513</td>\n",
              "      <td>0.545220</td>\n",
              "      <td>0.207543</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3. Поиск справочной информации (словари, справочники и т.д.)</th>\n",
              "      <td>0.014343</td>\n",
              "      <td>0.582824</td>\n",
              "      <td>0.214161</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4. Просмотр видеоуроков</th>\n",
              "      <td>0.160374</td>\n",
              "      <td>0.618026</td>\n",
              "      <td>0.029220</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5. Просмотр научно-популярных и художественных фильмов, которые нужны для учебы</th>\n",
              "      <td>0.175545</td>\n",
              "      <td>0.651030</td>\n",
              "      <td>0.009369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6. Тесты и тренажеры для самопроверки, подготовки к экзаменам и контрольным работам</th>\n",
              "      <td>0.133768</td>\n",
              "      <td>0.526986</td>\n",
              "      <td>-0.243721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7. Моделирование экспериментов в виртуальной среде</th>\n",
              "      <td>0.244197</td>\n",
              "      <td>0.439309</td>\n",
              "      <td>-0.432361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8. Дополнительные занятия (например, по скайпу)</th>\n",
              "      <td>0.156528</td>\n",
              "      <td>0.547254</td>\n",
              "      <td>-0.302807</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9. Участие в онлайн-олимпиадах и конкурсах</th>\n",
              "      <td>0.189595</td>\n",
              "      <td>0.519957</td>\n",
              "      <td>-0.404439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10. Обмен информацией, связанной с учебой, с одногруппниками (в мессенджерах, социальных сетях)</th>\n",
              "      <td>0.014459</td>\n",
              "      <td>0.560649</td>\n",
              "      <td>0.321615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11. Обмен информацией, связанной с учебой, с преподавателями (в мессенджерах, социальных сетях)</th>\n",
              "      <td>0.148111</td>\n",
              "      <td>0.591104</td>\n",
              "      <td>0.025069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ваш пол:</th>\n",
              "      <td>0.086169</td>\n",
              "      <td>-0.095477</td>\n",
              "      <td>-0.324308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ваш возраст:</th>\n",
              "      <td>0.002926</td>\n",
              "      <td>0.173707</td>\n",
              "      <td>0.706369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Как Вы учитесь в этом году?</th>\n",
              "      <td>-0.028147</td>\n",
              "      <td>0.162824</td>\n",
              "      <td>0.305383</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Какое техническое устройство Вы предпочитаете использовать для того, чтобы искать в интернете информацию, необходимую для выполнения учебных заданий? Выберите один вариант, который для Вас наиболее предпочтителен:1 смартфон,2 комп/ноут,3 планшет</th>\n",
              "      <td>-0.003791</td>\n",
              "      <td>0.014870</td>\n",
              "      <td>0.182155</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bartlett’s Test:\n",
            "Chi-Square Value: 108872.95483824752\n",
            "P-value: 0.0\n",
            "\n",
            "Kaiser-Meyer-Olkin (KMO) Test:\n",
            "KMO Overall: [0.82281374 0.74173796 0.66412029 0.58216702 0.85478594 0.75711851\n",
            " 0.76449647 0.60179782 0.60179783 0.60179521 0.18654232 0.10916375\n",
            " 0.19233123 0.38855165 0.38855154 0.26248023 0.26238794 0.29995163\n",
            " 0.28273985 0.79992867 0.80232756 0.89511706 0.84597603 0.86929286\n",
            " 0.77417216 0.86466571 0.86142803 0.89036738 0.90228136 0.90819734\n",
            " 0.90063665 0.89180039 0.88826062 0.891179   0.90009132 0.81441713\n",
            " 0.8193226  0.8121542  0.67538755]\n",
            "KMO Model: 0.4813714528307727\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/factor_analyzer/utils.py:244: UserWarning: The inverse of the variance-covariance matrix was calculated using the Moore-Penrose generalized matrix inversion, due to its determinant being at or very close to zero.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Principal Axes Factor Analysis:\n",
            "        Factor 1    Factor 2   Factor 3\n",
            "0    1904.154489 -376.505802  75.588788\n",
            "1   -1575.439665  512.313053 -82.761683\n",
            "2     588.113259 -271.820773  40.578333\n",
            "3     940.742072  -79.098717  26.181574\n",
            "4     520.401793 -143.657190  25.916216\n",
            "..           ...         ...        ...\n",
            "564  -404.558060    9.599510 -10.109434\n",
            "565   932.158985 -130.191613  30.010893\n",
            "566  1869.004106 -454.486238  81.001245\n",
            "567  -361.232211   34.163535 -10.090385\n",
            "568  2499.891922 -405.004150  87.086582\n",
            "\n",
            "[569 rows x 3 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from factor_analyzer import FactorAnalyzer\n",
        "from factor_analyzer.factor_analyzer import calculate_bartlett_sphericity, calculate_kmo\n",
        "\n",
        "# Load your data into the 'data' DataFrame\n",
        "# data = ...\n",
        "\n",
        "# Specify the number of factors you want to extract\n",
        "num_factors = 3\n",
        "\n",
        "# Initialize the factor analyzer with the principal axes factor extraction method and varimax rotation\n",
        "factor_analyzer = FactorAnalyzer(n_factors=num_factors, rotation='varimax')\n",
        "\n",
        "# Fit the principal axes factor extraction model to your data\n",
        "factor_analyzer.fit(data)\n",
        "\n",
        "# Get the factor loadings using the principal axes factor extraction method\n",
        "factor_loadings = factor_analyzer.loadings_\n",
        "\n",
        "# Create a pandas DataFrame from the factor loadings\n",
        "factor_loading_df = pd.DataFrame(factor_loadings, columns=[f'Factor {i+1}' for i in range(num_factors)], index=data.columns)\n",
        "\n",
        "# Print the factor loadings\n",
        "print(\"Factor Loadings Table:\\n\", factor_loading_df)\n",
        "\n",
        "# Bartlett’s Test for Sphericity\n",
        "chi_square_value, p_value = calculate_bartlett_sphericity(data)\n",
        "print(\"Bartlett’s Test for Sphericity:\\n\")\n",
        "print(\"Chi-Square Value:\", chi_square_value)\n",
        "print(\"P-Value:\", p_value)\n",
        "\n",
        "# Kaiser-Meyer-Olkin (KMO) Test\n",
        "kmo_all, kmo_model = calculate_kmo(data)\n",
        "print(\"\\nKaiser-Meyer-Olkin (KMO) Test:\\n\")\n",
        "print(\"KMO Overall:\", kmo_all)\n",
        "print(\"KMO Model:\", kmo_model)\n",
        "\n",
        "eigenvalues, _ = factor_analyzer.get_eigenvalues()\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.plot(range(1, len(eigenvalues) + 1), eigenvalues, marker='o')  # Use len(eigenvalues)\n",
        "plt.title('Scree Plot')\n",
        "plt.xlabel('Factors')\n",
        "plt.ylabel('Eigenvalue')\n",
        "plt.axhline(1)  # Kaiser's criterion line\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "VAsouUuLmAaJ",
        "outputId": "87e9080e-f50b-4318-eadf-762b1d99944c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Factor Loadings Table:\n",
            "                                                     Factor 1  Factor 2  \\\n",
            "№                                                   0.109141 -0.194866   \n",
            "Студенты (1)школьники(0)                           -0.069613  0.207757   \n",
            "Использую для учебных и образовательных целей       0.170495  0.184158   \n",
            "Использую в целях, не связанных с обучением или... -0.077768 -0.171886   \n",
            "Использую и для учебных, и для не учебных целей     0.168000  0.052142   \n",
            "Не использую                                       -0.491835 -0.134695   \n",
            "Компонент знаний                                    0.469836  0.109612   \n",
            "Умею                                                0.590623  0.069114   \n",
            "Не умею                                            -0.590623 -0.069114   \n",
            "Компонент ответственности (обеспечения безопасн...  0.590610  0.069120   \n",
            "Использую для учебных и образовательных целей.1     0.156523  0.192873   \n",
            "Использую в целях, не связанных с обучением или...  0.004150 -0.125415   \n",
            "Использую и для учебных и для неучебных целей       0.322695  0.046842   \n",
            "Не использую.1                                     -0.950100 -0.137716   \n",
            "Компонент умений                                    0.950100  0.137716   \n",
            "Контент 6 (1,2,4,5,8,20)                            0.673882  0.130806   \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.659731  0.128958   \n",
            "Техносфера 6 (9,10,14,15,18,22)                     0.729499  0.063374   \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.703074  0.154215   \n",
            "1. Для развлечения, отдыха                          0.006383  0.264663   \n",
            "2. Для общения                                      0.062643  0.355728   \n",
            "3. Для учебы                                       -0.020079  0.572752   \n",
            "4. Для поиска информации, не связанной с учебой    -0.001815  0.429856   \n",
            "5. Для покупок                                      0.277791  0.391318   \n",
            "1. Поиск готовых решений и ответов, выполненных...  0.072143  0.295153   \n",
            "2. Поиск дополнительной информации, которой нет...  0.060513  0.545220   \n",
            "3. Поиск справочной информации (словари, справо...  0.014343  0.582824   \n",
            "4. Просмотр видеоуроков                             0.160374  0.618026   \n",
            "5. Просмотр научно-популярных и художественных ...  0.175545  0.651030   \n",
            "6. Тесты и тренажеры для самопроверки, подготов...  0.133768  0.526986   \n",
            "7. Моделирование экспериментов в виртуальной среде  0.244197  0.439309   \n",
            "8. Дополнительные занятия (например, по скайпу)     0.156528  0.547254   \n",
            "9. Участие в онлайн-олимпиадах и конкурсах          0.189595  0.519957   \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.014459  0.560649   \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.148111  0.591104   \n",
            "Ваш пол:                                            0.086169 -0.095477   \n",
            "Ваш возраст:                                        0.002926  0.173707   \n",
            "Как Вы учитесь в этом году?                        -0.028147  0.162824   \n",
            "Какое техническое устройство Вы предпочитаете и... -0.003791  0.014870   \n",
            "\n",
            "                                                    Factor 3  \n",
            "№                                                  -0.708537  \n",
            "Студенты (1)школьники(0)                            0.774454  \n",
            "Использую для учебных и образовательных целей      -0.439232  \n",
            "Использую в целях, не связанных с обучением или... -0.031861  \n",
            "Использую и для учебных, и для не учебных целей     0.576696  \n",
            "Не использую                                       -0.390297  \n",
            "Компонент знаний                                    0.459696  \n",
            "Умею                                               -0.104307  \n",
            "Не умею                                             0.104307  \n",
            "Компонент ответственности (обеспечения безопасн... -0.104302  \n",
            "Использую для учебных и образовательных целей.1    -0.527466  \n",
            "Использую в целях, не связанных с обучением или... -0.043581  \n",
            "Использую и для учебных и для неучебных целей       0.386673  \n",
            "Не использую.1                                      0.080218  \n",
            "Компонент умений                                   -0.080218  \n",
            "Контент 6 (1,2,4,5,8,20)                            0.009769  \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.062160  \n",
            "Техносфера 6 (9,10,14,15,18,22)                    -0.297661  \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.013720  \n",
            "1. Для развлечения, отдыха                          0.017525  \n",
            "2. Для общения                                      0.117168  \n",
            "3. Для учебы                                        0.296167  \n",
            "4. Для поиска информации, не связанной с учебой     0.107079  \n",
            "5. Для покупок                                     -0.050600  \n",
            "1. Поиск готовых решений и ответов, выполненных... -0.151727  \n",
            "2. Поиск дополнительной информации, которой нет...  0.207543  \n",
            "3. Поиск справочной информации (словари, справо...  0.214161  \n",
            "4. Просмотр видеоуроков                             0.029220  \n",
            "5. Просмотр научно-популярных и художественных ...  0.009369  \n",
            "6. Тесты и тренажеры для самопроверки, подготов... -0.243721  \n",
            "7. Моделирование экспериментов в виртуальной среде -0.432361  \n",
            "8. Дополнительные занятия (например, по скайпу)    -0.302807  \n",
            "9. Участие в онлайн-олимпиадах и конкурсах         -0.404439  \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.321615  \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.025069  \n",
            "Ваш пол:                                           -0.324308  \n",
            "Ваш возраст:                                        0.706369  \n",
            "Как Вы учитесь в этом году?                         0.305383  \n",
            "Какое техническое устройство Вы предпочитаете и...  0.182155  \n",
            "Bartlett’s Test for Sphericity:\n",
            "\n",
            "Chi-Square Value: 108872.95483824752\n",
            "P-Value: 0.0\n",
            "\n",
            "Kaiser-Meyer-Olkin (KMO) Test:\n",
            "\n",
            "KMO Overall: [0.82281374 0.74173796 0.66412029 0.58216702 0.85478594 0.75711851\n",
            " 0.76449647 0.60179782 0.60179783 0.60179521 0.18654232 0.10916375\n",
            " 0.19233123 0.38855165 0.38855154 0.26248023 0.26238794 0.29995163\n",
            " 0.28273985 0.79992867 0.80232756 0.89511706 0.84597603 0.86929286\n",
            " 0.77417216 0.86466571 0.86142803 0.89036738 0.90228136 0.90819734\n",
            " 0.90063665 0.89180039 0.88826062 0.891179   0.90009132 0.81441713\n",
            " 0.8193226  0.8121542  0.67538755]\n",
            "KMO Model: 0.4813714528307727\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/factor_analyzer/utils.py:244: UserWarning: The inverse of the variance-covariance matrix was calculated using the Moore-Penrose generalized matrix inversion, due to its determinant being at or very close to zero.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from factor_analyzer import FactorAnalyzer\n",
        "from factor_analyzer.factor_analyzer import calculate_bartlett_sphericity, calculate_kmo\n",
        "\n",
        "# Load your data into the 'data' DataFrame\n",
        "# data = ...\n",
        "\n",
        "# Specify the number of factors you want to extract\n",
        "num_factors = 3\n",
        "\n",
        "# Initialize the factor analyzer with the desired number of factors and varimax rotation\n",
        "factor_analyzer = FactorAnalyzer(n_factors=num_factors, rotation='varimax')\n",
        "\n",
        "# Fit the model to your data\n",
        "factor_analyzer.fit(data)\n",
        "\n",
        "# Get the factor loadings\n",
        "factor_loadings = factor_analyzer.loadings_\n",
        "\n",
        "# Create a pandas DataFrame from the factor loadings\n",
        "factor_loading_df = pd.DataFrame(factor_loadings, columns=[f'Factor {i+1}' for i in range(num_factors)], index=data.columns)\n",
        "\n",
        "# Print the factor loadings\n",
        "print(\"Factor Loadings Table:\\n\", factor_loading_df)\n",
        "\n",
        "# Bartlett’s Test for Sphericity\n",
        "chi_square_value, p_value = calculate_bartlett_sphericity(data)\n",
        "print(\"Bartlett’s Test for Sphericity:\\n\")\n",
        "print(\"Chi-Square Value:\", chi_square_value)\n",
        "print(\"P-Value:\", p_value)\n",
        "\n",
        "# Kaiser-Meyer-Olkin (KMO) Test\n",
        "kmo_all, kmo_model = calculate_kmo(data)\n",
        "print(\"\\nKaiser-Meyer-Olkin (KMO) Test:\\n\")\n",
        "print(\"KMO Overall:\", kmo_all)\n",
        "print(\"KMO Model:\", kmo_model)\n",
        "\n",
        "# Scree Plot\n",
        "eigenvalues, _ = factor_analyzer.get_eigenvalues()\n",
        "plt.figure(figsize=(8, 6))\n",
        "plt.plot(range(1, len(eigenvalues) + 1), eigenvalues, marker='o')\n",
        "plt.title('Scree Plot')\n",
        "plt.xlabel('Factors')\n",
        "plt.ylabel('Eigenvalue')\n",
        "plt.axhline(1)  # Kaiser's criterion line\n",
        "plt.grid()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "S_gH7m7mnK1B",
        "outputId": "8077a94b-0454-4826-bf16-b2a4b753c255"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Factor Loadings Table:\n",
            "                                                     Factor 1  Factor 2  \\\n",
            "№                                                   0.109141 -0.194866   \n",
            "Студенты (1)школьники(0)                           -0.069613  0.207757   \n",
            "Использую для учебных и образовательных целей       0.170495  0.184158   \n",
            "Использую в целях, не связанных с обучением или... -0.077768 -0.171886   \n",
            "Использую и для учебных, и для не учебных целей     0.168000  0.052142   \n",
            "Не использую                                       -0.491835 -0.134695   \n",
            "Компонент знаний                                    0.469836  0.109612   \n",
            "Умею                                                0.590623  0.069114   \n",
            "Не умею                                            -0.590623 -0.069114   \n",
            "Компонент ответственности (обеспечения безопасн...  0.590610  0.069120   \n",
            "Использую для учебных и образовательных целей.1     0.156523  0.192873   \n",
            "Использую в целях, не связанных с обучением или...  0.004150 -0.125415   \n",
            "Использую и для учебных и для неучебных целей       0.322695  0.046842   \n",
            "Не использую.1                                     -0.950100 -0.137716   \n",
            "Компонент умений                                    0.950100  0.137716   \n",
            "Контент 6 (1,2,4,5,8,20)                            0.673882  0.130806   \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.659731  0.128958   \n",
            "Техносфера 6 (9,10,14,15,18,22)                     0.729499  0.063374   \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.703074  0.154215   \n",
            "1. Для развлечения, отдыха                          0.006383  0.264663   \n",
            "2. Для общения                                      0.062643  0.355728   \n",
            "3. Для учебы                                       -0.020079  0.572752   \n",
            "4. Для поиска информации, не связанной с учебой    -0.001815  0.429856   \n",
            "5. Для покупок                                      0.277791  0.391318   \n",
            "1. Поиск готовых решений и ответов, выполненных...  0.072143  0.295153   \n",
            "2. Поиск дополнительной информации, которой нет...  0.060513  0.545220   \n",
            "3. Поиск справочной информации (словари, справо...  0.014343  0.582824   \n",
            "4. Просмотр видеоуроков                             0.160374  0.618026   \n",
            "5. Просмотр научно-популярных и художественных ...  0.175545  0.651030   \n",
            "6. Тесты и тренажеры для самопроверки, подготов...  0.133768  0.526986   \n",
            "7. Моделирование экспериментов в виртуальной среде  0.244197  0.439309   \n",
            "8. Дополнительные занятия (например, по скайпу)     0.156528  0.547254   \n",
            "9. Участие в онлайн-олимпиадах и конкурсах          0.189595  0.519957   \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.014459  0.560649   \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.148111  0.591104   \n",
            "Ваш пол:                                            0.086169 -0.095477   \n",
            "Ваш возраст:                                        0.002926  0.173707   \n",
            "Как Вы учитесь в этом году?                        -0.028147  0.162824   \n",
            "Какое техническое устройство Вы предпочитаете и... -0.003791  0.014870   \n",
            "\n",
            "                                                    Factor 3  \n",
            "№                                                  -0.708537  \n",
            "Студенты (1)школьники(0)                            0.774454  \n",
            "Использую для учебных и образовательных целей      -0.439232  \n",
            "Использую в целях, не связанных с обучением или... -0.031861  \n",
            "Использую и для учебных, и для не учебных целей     0.576696  \n",
            "Не использую                                       -0.390297  \n",
            "Компонент знаний                                    0.459696  \n",
            "Умею                                               -0.104307  \n",
            "Не умею                                             0.104307  \n",
            "Компонент ответственности (обеспечения безопасн... -0.104302  \n",
            "Использую для учебных и образовательных целей.1    -0.527466  \n",
            "Использую в целях, не связанных с обучением или... -0.043581  \n",
            "Использую и для учебных и для неучебных целей       0.386673  \n",
            "Не использую.1                                      0.080218  \n",
            "Компонент умений                                   -0.080218  \n",
            "Контент 6 (1,2,4,5,8,20)                            0.009769  \n",
            "Коммуникация 7 (7,11,13, 16,17,19,23)               0.062160  \n",
            "Техносфера 6 (9,10,14,15,18,22)                    -0.297661  \n",
            "Потребление 6 (3,6,12,21,24,25)                     0.013720  \n",
            "1. Для развлечения, отдыха                          0.017525  \n",
            "2. Для общения                                      0.117168  \n",
            "3. Для учебы                                        0.296167  \n",
            "4. Для поиска информации, не связанной с учебой     0.107079  \n",
            "5. Для покупок                                     -0.050600  \n",
            "1. Поиск готовых решений и ответов, выполненных... -0.151727  \n",
            "2. Поиск дополнительной информации, которой нет...  0.207543  \n",
            "3. Поиск справочной информации (словари, справо...  0.214161  \n",
            "4. Просмотр видеоуроков                             0.029220  \n",
            "5. Просмотр научно-популярных и художественных ...  0.009369  \n",
            "6. Тесты и тренажеры для самопроверки, подготов... -0.243721  \n",
            "7. Моделирование экспериментов в виртуальной среде -0.432361  \n",
            "8. Дополнительные занятия (например, по скайпу)    -0.302807  \n",
            "9. Участие в онлайн-олимпиадах и конкурсах         -0.404439  \n",
            "10. Обмен информацией, связанной с учебой, с од...  0.321615  \n",
            "11. Обмен информацией, связанной с учебой, с пр...  0.025069  \n",
            "Ваш пол:                                           -0.324308  \n",
            "Ваш возраст:                                        0.706369  \n",
            "Как Вы учитесь в этом году?                         0.305383  \n",
            "Какое техническое устройство Вы предпочитаете и...  0.182155  \n",
            "Bartlett’s Test for Sphericity:\n",
            "\n",
            "Chi-Square Value: 108872.95483824752\n",
            "P-Value: 0.0\n",
            "\n",
            "Kaiser-Meyer-Olkin (KMO) Test:\n",
            "\n",
            "KMO Overall: [0.82281374 0.74173796 0.66412029 0.58216702 0.85478594 0.75711851\n",
            " 0.76449647 0.60179782 0.60179783 0.60179521 0.18654232 0.10916375\n",
            " 0.19233123 0.38855165 0.38855154 0.26248023 0.26238794 0.29995163\n",
            " 0.28273985 0.79992867 0.80232756 0.89511706 0.84597603 0.86929286\n",
            " 0.77417216 0.86466571 0.86142803 0.89036738 0.90228136 0.90819734\n",
            " 0.90063665 0.89180039 0.88826062 0.891179   0.90009132 0.81441713\n",
            " 0.8193226  0.8121542  0.67538755]\n",
            "KMO Model: 0.4813714528307727\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/factor_analyzer/utils.py:244: UserWarning: The inverse of the variance-covariance matrix was calculated using the Moore-Penrose generalized matrix inversion, due to its determinant being at or very close to zero.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}